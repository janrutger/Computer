# .HEADER
. $current_char 1
. $current_mode 1
. $current_color 1
. $current_width 1
. $current_height 1
. $current_flip 1
. $Xax 1
. $Yax 1
. $degrees 1
. $TURTLE_HEADING_DEG 1
. $TURTLE_HEADING 1
. $degrees_to_turn 1
. $dx 1
. $dy 1
. $distance 1
. $temp_ptr 1
. $msg 22
. $i 1
. $char 1
. $p_char 1
. $x1 1
. $y1 1
. $x2 1
. $y2 1
. $sx 1
. $sy 1
. $err 1
. $e2 1
. $circ_xc 1
. $circ_yc 1
. $circ_x 1
. $circ_y 1
. $circ_p 1
# .FUNCTIONS
@_drawTurtle
    ldm A $current_mode
    call @push_A
    ldi A 0
    call @push_A
    call @rt_eq
    call @pop_A
    tst A 0
    jmpt :_drawTurtle_if_else_0
    ldm A $current_color
    call @push_A
    ldi A 2
    call @push_A
    ldi A 17
    call @push_A
    call @rt_udc_control
    jmp :_drawTurtle_if_end_0
:_drawTurtle_if_else_0
    ldm A $current_char
    call @push_A
    ldi A 2
    call @push_A
    ldi A 17
    call @push_A
    call @rt_udc_control
:_drawTurtle_if_end_0
    ret
@TURTLE.mode
    call @rt_dup
    call @pop_A
    sto A $current_mode
    ldi A 2
    call @push_A
    ldi A 14
    call @push_A
    call @rt_udc_control
    ldm A $current_mode
    call @push_A
    ldi A 0
    call @push_A
    call @rt_eq
    call @pop_A
    tst A 0
    jmpt :TURTLE.mode_if_end_1
    ldi A 0
    call @push_A
    call @pop_A
    sto A $current_flip
:TURTLE.mode_if_end_1
    ldm A $current_mode
    call @push_A
    ldi A 1
    call @push_A
    call @rt_eq
    call @pop_A
    tst A 0
    jmpt :TURTLE.mode_if_end_2
    ldi A 0
    call @push_A
    call @pop_A
    sto A $current_flip
:TURTLE.mode_if_end_2
    ldm A $current_mode
    call @push_A
    ldi A 2
    call @push_A
    call @rt_eq
    call @pop_A
    tst A 0
    jmpt :TURTLE.mode_if_end_3
    ldi A 0
    call @push_A
    call @pop_A
    sto A $current_mode
    ldi A 1
    call @push_A
    call @pop_A
    sto A $current_flip
:TURTLE.mode_if_end_3
    ldm A $current_mode
    call @push_A
    ldi A 3
    call @push_A
    call @rt_eq
    call @pop_A
    tst A 0
    jmpt :TURTLE.mode_if_end_4
    ldi A 1
    call @push_A
    call @pop_A
    sto A $current_mode
    ldi A 1
    call @push_A
    call @pop_A
    sto A $current_flip
:TURTLE.mode_if_end_4
    ldm A $current_mode
    call @push_A
    ldi A 0
    call @push_A
    call @rt_eq
    call @pop_A
    tst A 0
    jmpt :TURTLE.mode_if_else_5
    ldi A 480
    call @push_A
    call @pop_A
    sto A $current_height
    ldi A 640
    call @push_A
    call @pop_A
    sto A $current_width
    jmp :TURTLE.mode_if_end_5
:TURTLE.mode_if_else_5
    ldi A 60
    call @push_A
    call @pop_A
    sto A $current_height
    ldi A 80
    call @push_A
    call @pop_A
    sto A $current_width
:TURTLE.mode_if_end_5
    ret
@TURTLE.flip
    ldm A $current_flip
    call @push_A
    call @pop_A
    tst A 0
    jmpt :TURTLE.flip_if_end_6
    ldi A 0
    call @push_A
    ldi A 2
    call @push_A
    ldi A 18
    call @push_A
    call @rt_udc_control
:TURTLE.flip_if_end_6
    ret
@TURTLE.right
    call @pop_A
    sto A $degrees_to_turn
    ldm A $TURTLE_HEADING_DEG
    call @push_A
    ldm A $degrees_to_turn
    call @push_A
    call @rt_add
    ldi A 360
    call @push_A
    call @rt_mod
    call @pop_A
    sto A $TURTLE_HEADING_DEG
    ret
@TURTLE.left
    call @pop_A
    sto A $degrees_to_turn
    ldi A 360
    call @push_A
    ldm A $TURTLE_HEADING_DEG
    call @push_A
    call @rt_add
    ldm A $degrees_to_turn
    call @push_A
    call @rt_sub
    ldi A 360
    call @push_A
    call @rt_mod
    call @pop_A
    sto A $TURTLE_HEADING_DEG
    ret
@TURTLE.color
    call @rt_dup
    call @pop_A
    sto A $current_color
    ldi A 2
    call @push_A
    ldi A 13
    call @push_A
    call @rt_udc_control
    ret
@TURTLE.goto
    ldm A $current_height
    call @push_A
    call @rt_mod
    call @rt_dup
    call @pop_A
    sto A $Yax
    ldi A 2
    call @push_A
    ldi A 16
    call @push_A
    call @rt_udc_control
    ldm A $current_width
    call @push_A
    call @rt_mod
    call @rt_dup
    call @pop_A
    sto A $Xax
    ldi A 2
    call @push_A
    ldi A 15
    call @push_A
    call @rt_udc_control
    call @_drawTurtle
    ret
@TURTLE.forward
    call @pop_A
    sto A $distance
    ldm A $distance
    call @push_A
    ldi A 0
    call @push_A
    call @rt_lt
    call @pop_A
    tst A 0
    jmpt :TURTLE.forward_if_end_7
    jmp :move_end
:TURTLE.forward_if_end_7
    ldm A $TURTLE_HEADING_DEG
    call @push_A
    ldi A 22
    call @push_A
    call @rt_add
    ldi A 45
    call @push_A
    call @rt_div
    call @pop_A
    sto A $TURTLE_HEADING
    ldi A $TURTLE_DX
    call @push_A
    ldm A $TURTLE_HEADING
    call @push_A
    call @rt_add
    call @pop_A
    sto A $temp_ptr
    ldm I $temp_ptr
    ldx A $_start_memory_
    call @push_A
    call @pop_A
    sto A $dx
    ldi A $TURTLE_DY
    call @push_A
    ldm A $TURTLE_HEADING
    call @push_A
    call @rt_add
    call @pop_A
    sto A $temp_ptr
    ldm I $temp_ptr
    ldx A $_start_memory_
    call @push_A
    call @pop_A
    sto A $dy
:move_loop
    ldm A $distance
    call @push_A
    ldi A 0
    call @push_A
    call @rt_eq
    call @pop_A
    tst A 0
    jmpt :TURTLE.forward_if_end_8
    jmp :move_end
:TURTLE.forward_if_end_8
    ldm A $Xax
    call @push_A
    ldm A $dx
    call @push_A
    call @rt_add
    call @pop_A
    sto A $Xax
    ldm A $Yax
    call @push_A
    ldm A $dy
    call @push_A
    call @rt_add
    call @pop_A
    sto A $Yax
    ldm A $Xax
    call @push_A
    ldm A $Yax
    call @push_A
    call @TURTLE.goto
    ldm A $distance
    call @push_A
    ldi A 1
    call @push_A
    call @rt_sub
    call @pop_A
    sto A $distance
    jmp :move_loop
:move_end
    ret
@_welcome_at_turtle
    ldi A 30
    call @push_A
    ldi A 2
    call @push_A
    ldi A 15
    call @push_A
    call @rt_udc_control
    ldi A 1
    call @push_A
    ldi A 2
    call @push_A
    ldi A 16
    call @push_A
    call @rt_udc_control
:welcome_loop
    ldi A $msg
    call @push_A
    ldm A $i
    call @push_A
    call @rt_add
    call @pop_A
    sto A $p_char
    ldm I $p_char
    ldx A $_start_memory_
    call @push_A
    call @pop_A
    sto A $char
    ldm A $char
    call @push_A
    ldi A 0
    call @push_A
    call @rt_eq
    call @pop_A
    tst A 0
    jmpt :_welcome_at_turtle_if_end_9
    jmp :welcome_end
:_welcome_at_turtle_if_end_9
    ldm A $char
    call @push_A
    ldi A 2
    call @push_A
    ldi A 17
    call @push_A
    call @rt_udc_control
    ldi A 30
    call @push_A
    ldm A $i
    call @push_A
    call @rt_add
    ldi A 1
    call @push_A
    call @rt_add
    ldi A 2
    call @push_A
    ldi A 15
    call @push_A
    call @rt_udc_control
    ldm A $i
    call @push_A
    ldi A 1
    call @push_A
    call @rt_add
    call @pop_A
    sto A $i
    jmp :welcome_loop
:welcome_end
    ldi A 0
    call @push_A
    ldi A 2
    call @push_A
    ldi A 18
    call @push_A
    call @rt_udc_control
    ret
@TURTLE.start

    . $TURTLE_DX 8
    % $TURTLE_DX  1  1  0 -1 -1 -1  0  1
    . $TURTLE_DY 8
    % $TURTLE_DY  0  1  1  1  0 -1 -1 -1
    ldi A 0
    call @push_A
    ldi A 2
    call @push_A
    ldi A 1
    call @push_A
    call @rt_udc_control
    ldm A $current_mode
    call @push_A
    ldi A 2
    call @push_A
    ldi A 14
    call @push_A
    call @rt_udc_control
    ldm A $current_color
    call @push_A
    ldi A 2
    call @push_A
    ldi A 13
    call @push_A
    call @rt_udc_control
    call @_welcome_at_turtle
    ret
@TURTLE.line
    call @pop_A
    sto A $y2
    call @pop_A
    sto A $x2
    call @pop_A
    sto A $y1
    call @pop_A
    sto A $x1
    ldm A $x2
    call @push_A
    ldm A $x1
    call @push_A
    call @rt_sub
    call @pop_A
    sto A $dx
    ldm A $dx
    call @push_A
    ldi A 0
    call @push_A
    call @rt_lt
    call @pop_A
    tst A 0
    jmpt :TURTLE.line_if_end_10
    ldi A 0
    call @push_A
    ldi A 1
    call @push_A
    call @rt_sub
    ldm A $dx
    call @push_A
    call @rt_mul
    call @pop_A
    sto A $dx
:TURTLE.line_if_end_10
    ldm A $y2
    call @push_A
    ldm A $y1
    call @push_A
    call @rt_sub
    call @pop_A
    sto A $dy
    ldm A $dy
    call @push_A
    ldi A 0
    call @push_A
    call @rt_lt
    call @pop_A
    tst A 0
    jmpt :TURTLE.line_if_end_11
    ldi A 0
    call @push_A
    ldi A 1
    call @push_A
    call @rt_sub
    ldm A $dy
    call @push_A
    call @rt_mul
    call @pop_A
    sto A $dy
:TURTLE.line_if_end_11
    ldi A 0
    call @push_A
    ldi A 1
    call @push_A
    call @rt_sub
    call @pop_A
    sto A $sx
    ldm A $x1
    call @push_A
    ldm A $x2
    call @push_A
    call @rt_lt
    call @pop_A
    tst A 0
    jmpt :TURTLE.line_if_end_12
    ldi A 1
    call @push_A
    call @pop_A
    sto A $sx
:TURTLE.line_if_end_12
    ldi A 0
    call @push_A
    ldi A 1
    call @push_A
    call @rt_sub
    call @pop_A
    sto A $sy
    ldm A $y1
    call @push_A
    ldm A $y2
    call @push_A
    call @rt_lt
    call @pop_A
    tst A 0
    jmpt :TURTLE.line_if_end_13
    ldi A 1
    call @push_A
    call @pop_A
    sto A $sy
:TURTLE.line_if_end_13
    ldi A 0
    call @push_A
    ldi A 1
    call @push_A
    call @rt_sub
    ldm A $dy
    call @push_A
    call @rt_mul
    call @pop_A
    sto A $dy
    ldm A $dx
    call @push_A
    ldm A $dy
    call @push_A
    call @rt_add
    call @pop_A
    sto A $err
:line_loop
    ldm A $x1
    call @push_A
    ldm A $y1
    call @push_A
    call @TURTLE.goto
    ldm A $x1
    call @push_A
    ldm A $x2
    call @push_A
    call @rt_eq
    call @pop_A
    tst A 0
    jmpt :TURTLE.line_if_end_14
    ldm A $y1
    call @push_A
    ldm A $y2
    call @push_A
    call @rt_eq
    call @pop_A
    tst A 0
    jmpt :TURTLE.line_if_end_15
    jmp :line_end
:TURTLE.line_if_end_15
:TURTLE.line_if_end_14
    ldm A $err
    call @push_A
    ldi A 2
    call @push_A
    call @rt_mul
    call @pop_A
    sto A $e2
    ldm A $e2
    call @push_A
    ldm A $dy
    call @push_A
    call @rt_lt
    call @pop_A
    tst A 0
    jmpt :TURTLE.line_if_end_16
    jmp :skip_x_move
:TURTLE.line_if_end_16
    ldm A $err
    call @push_A
    ldm A $dy
    call @push_A
    call @rt_add
    call @pop_A
    sto A $err
    ldm A $x1
    call @push_A
    ldm A $sx
    call @push_A
    call @rt_add
    call @pop_A
    sto A $x1
:skip_x_move
    ldm A $e2
    call @push_A
    ldm A $dx
    call @push_A
    call @rt_gt
    call @pop_A
    tst A 0
    jmpt :TURTLE.line_if_end_17
    jmp :skip_y_move
:TURTLE.line_if_end_17
    ldm A $err
    call @push_A
    ldm A $dx
    call @push_A
    call @rt_add
    call @pop_A
    sto A $err
    ldm A $y1
    call @push_A
    ldm A $sy
    call @push_A
    call @rt_add
    call @pop_A
    sto A $y1
:skip_y_move
    jmp :line_loop
:line_end
    ldm A $x2
    call @push_A
    call @pop_A
    sto A $Xax
    ldm A $y2
    call @push_A
    call @pop_A
    sto A $Yax
    ret
@_plot_circle_points
    call @pop_A
    sto A $circ_y
    call @pop_A
    sto A $circ_x
    ldm A $circ_xc
    call @push_A
    ldm A $circ_x
    call @push_A
    call @rt_add
    ldm A $circ_yc
    call @push_A
    ldm A $circ_y
    call @push_A
    call @rt_add
    call @TURTLE.goto
    ldm A $circ_xc
    call @push_A
    ldm A $circ_x
    call @push_A
    call @rt_sub
    ldm A $circ_yc
    call @push_A
    ldm A $circ_y
    call @push_A
    call @rt_add
    call @TURTLE.goto
    ldm A $circ_xc
    call @push_A
    ldm A $circ_x
    call @push_A
    call @rt_add
    ldm A $circ_yc
    call @push_A
    ldm A $circ_y
    call @push_A
    call @rt_sub
    call @TURTLE.goto
    ldm A $circ_xc
    call @push_A
    ldm A $circ_x
    call @push_A
    call @rt_sub
    ldm A $circ_yc
    call @push_A
    ldm A $circ_y
    call @push_A
    call @rt_sub
    call @TURTLE.goto
    ldm A $circ_xc
    call @push_A
    ldm A $circ_y
    call @push_A
    call @rt_add
    ldm A $circ_yc
    call @push_A
    ldm A $circ_x
    call @push_A
    call @rt_add
    call @TURTLE.goto
    ldm A $circ_xc
    call @push_A
    ldm A $circ_y
    call @push_A
    call @rt_sub
    ldm A $circ_yc
    call @push_A
    ldm A $circ_x
    call @push_A
    call @rt_add
    call @TURTLE.goto
    ldm A $circ_xc
    call @push_A
    ldm A $circ_y
    call @push_A
    call @rt_add
    ldm A $circ_yc
    call @push_A
    ldm A $circ_x
    call @push_A
    call @rt_sub
    call @TURTLE.goto
    ldm A $circ_xc
    call @push_A
    ldm A $circ_y
    call @push_A
    call @rt_sub
    ldm A $circ_yc
    call @push_A
    ldm A $circ_x
    call @push_A
    call @rt_sub
    call @TURTLE.goto
    ret
@TURTLE.circle
    call @pop_A
    sto A $circ_p
    call @pop_A
    sto A $circ_yc
    call @pop_A
    sto A $circ_xc
    ldm A $circ_p
    call @push_A
    call @pop_A
    sto A $circ_x
    ldi A 0
    call @push_A
    call @pop_A
    sto A $circ_y
    ldi A 1
    call @push_A
    ldm A $circ_p
    call @push_A
    call @rt_sub
    call @pop_A
    sto A $circ_p
:circle_loop
    ldm A $circ_x
    call @push_A
    ldm A $circ_y
    call @push_A
    call @_plot_circle_points
    ldm A $circ_y
    call @push_A
    ldi A 1
    call @push_A
    call @rt_add
    call @pop_A
    sto A $circ_y
    ldi A 0
    call @push_A
    ldm A $circ_p
    call @push_A
    call @rt_gt
    call @pop_A
    tst A 0
    jmpt :TURTLE.circle_if_else_18
    ldm A $circ_p
    call @push_A
    ldm A $circ_y
    call @push_A
    ldi A 2
    call @push_A
    call @rt_mul
    call @rt_add
    ldi A 1
    call @push_A
    call @rt_add
    call @pop_A
    sto A $circ_p
    jmp :TURTLE.circle_if_end_18
:TURTLE.circle_if_else_18
    ldm A $circ_x
    call @push_A
    ldi A 1
    call @push_A
    call @rt_sub
    call @pop_A
    sto A $circ_x
    ldm A $circ_p
    call @push_A
    ldm A $circ_y
    call @push_A
    ldi A 2
    call @push_A
    call @rt_mul
    call @rt_add
    ldm A $circ_x
    call @push_A
    ldi A 2
    call @push_A
    call @rt_mul
    call @rt_sub
    ldi A 1
    call @push_A
    call @rt_add
    call @pop_A
    sto A $circ_p
:TURTLE.circle_if_end_18
    ldm A $circ_x
    call @push_A
    ldm A $circ_y
    call @push_A
    call @rt_gt
    call @pop_A
    tst A 0
    jmpt :TURTLE.circle_if_end_19
    jmp :circle_loop
:TURTLE.circle_if_end_19
    ldm A $circ_x
    call @push_A
    ldm A $circ_y
    call @push_A
    call @_plot_circle_points
    ret

# .DATA
% $current_char 203
% $current_mode 3
% $current_color 5
% $current_width 80
% $current_height 60
% $current_flip 1
% $Xax 0
% $Yax 0
% $degrees 0
% $TURTLE_HEADING_DEG 0
% $TURTLE_HEADING 0
% $degrees_to_turn 0
% $dx 0
% $dy 0
% $distance 0
% $temp_ptr 0
% $msg \* \space \W \e \l \c \o \m \e \space \a \t \space \T \U \R \T \L \E \space \* \null
% $i 0
% $char 0
% $p_char 0
% $x1 0
% $y1 0
% $x2 0
% $y2 0
% $sx 0
% $sy 0
% $err 0
% $e2 0
% $circ_xc 0
% $circ_yc 0
% $circ_x 0
% $circ_y 0
% $circ_p 0
